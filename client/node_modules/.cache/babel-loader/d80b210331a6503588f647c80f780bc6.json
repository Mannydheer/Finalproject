{"ast":null,"code":"import { useDispatch, useSelector } from 'react-redux';\nimport { loginSuccess, loginError, loginRequest } from '../actions/userActions';\nconst dispatch = useDispatch();\nexport const fetchUserProfile = async () => {\n  let token = localStorage.getItem('accesstoken');\n\n  if (!token) {\n    dispatch(loginError());\n  } //validate for no tokens\n\n\n  let response = await fetch(\"/user/profile\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      'Authorization': `${token}`\n    }\n  });\n  return response;\n};","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/helpers/helpers.js"],"names":["useDispatch","useSelector","loginSuccess","loginError","loginRequest","dispatch","fetchUserProfile","token","localStorage","getItem","response","fetch","method","headers","Accept"],"mappings":"AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,wBAAvD;AAGA,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,OAAO,MAAMM,gBAAgB,GAAG,YAAY;AACxC,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;;AAEA,MAAI,CAACF,KAAL,EAAY;AACRF,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AAEH,GANuC,CAOxC;;;AACA,MAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AACxCC,IAAAA,MAAM,EAAE,KADgC;AAExCC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,MAAM,EAAE,kBAFH;AAGL,uBAAkB,GAAEP,KAAM;AAHrB;AAF+B,GAAlB,CAA1B;AAQA,SAAOG,QAAP;AACH,CAjBM","sourcesContent":["\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginSuccess, loginError, loginRequest } from '../actions/userActions';\n\n\nconst dispatch = useDispatch();\n\nexport const fetchUserProfile = async () => {\n    let token = localStorage.getItem('accesstoken')\n\n    if (!token) {\n        dispatch(loginError())\n\n    }\n    //validate for no tokens\n    let response = await fetch(\"/user/profile\", {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'Authorization': `${token}`\n        }\n    })\n    return response;\n}"]},"metadata":{},"sourceType":"module"}