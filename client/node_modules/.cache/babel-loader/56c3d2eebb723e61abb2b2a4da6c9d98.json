{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Sports/Sports.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport WrappedMap from '../Map/Map'; //\n\nimport Geocode from \"react-geocode\";\nimport GoogleAddress from '../GoogleAddress';\n\nconst Sports = () => {\n  const userLoggedIn = useSelector(state => state.userReducer);\n  const [mapBool, setMapBool] = useState(false); //handlers.\n\n  const handleMapBool = e => {\n    e.preventDefault();\n    Geocode.setApiKey(\"AIzaSyAt-D4AMalUpyQjUe3laQYyjjNgy_hcCOc\"); // set response language. Defaults to english.\n\n    Geocode.setLanguage(\"en\"); // set response region. Its optional.\n    // A Geocoding request with region=es (Spain) will return the Spanish city.\n\n    Geocode.setRegion(\"ca\"); // Enable or disable logs. Its optional.\n\n    Geocode.enableDebug(); // Get latidude & longitude from address.\n\n    Geocode.fromAddress('9165 Clark St Montreal, QC H2N 2K4').then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      setMapBool(true);\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, userLoggedIn.status !== \"authenticated\" ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"You must be logged in to find games.\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Welcome. Enter an address to begin.\"), /*#__PURE__*/React.createElement(GoogleAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), mapBool && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100vw',\n      height: '80vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 47\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default Sports;\nconst Wrapper = styled.div`\n\nh1 {\n    text-align: center;\n}\n\n`;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Sports/Sports.js"],"names":["React","useState","styled","useDispatch","useSelector","WrappedMap","Geocode","GoogleAddress","Sports","userLoggedIn","state","userReducer","mapBool","setMapBool","handleMapBool","e","preventDefault","setApiKey","setLanguage","setRegion","enableDebug","fromAddress","then","response","lat","lng","results","geometry","location","console","log","error","status","width","height","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,YAAY,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAhC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC,CAJiB,CAOjB;;AAEA,QAAMa,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,OAAO,CAACW,SAAR,CAAkB,yCAAlB,EAFyB,CAGzB;;AACAX,IAAAA,OAAO,CAACY,WAAR,CAAoB,IAApB,EAJyB,CAKzB;AACA;;AACAZ,IAAAA,OAAO,CAACa,SAAR,CAAkB,IAAlB,EAPyB,CAQzB;;AACAb,IAAAA,OAAO,CAACc,WAAR,GATyB,CAUzB;;AACAd,IAAAA,OAAO,CAACe,WAAR,CAAoB,oCAApB,EAA0DC,IAA1D,CACIC,QAAQ,IAAI;AACR,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAAiBC,GAAjB;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALL,EAMIkB,KAAK,IAAI;AACLF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH,KARL;AAUH,GArBD;;AAyBA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,YAAY,CAACuB,MAAb,KAAwB,eAAxB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADH,gBAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHJ,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWKpB,OAAO,iBAAI;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR,oBAAC,UAAD;AACI,IAAA,YAAY,EAAG,mFADnB;AAEI,IAAA,cAAc,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpB;AAGI,IAAA,gBAAgB,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtB;AAII,IAAA,UAAU,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,CAXhB,CALR,CADJ;AAgCH,CAlED;;AAoEA,eAAe1B,MAAf;AAEA,MAAM2B,OAAO,GAAGjC,MAAM,CAACkC,GAAI;;;;;;CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport WrappedMap from '../Map/Map';\n\n//\nimport Geocode from \"react-geocode\";\nimport GoogleAddress from '../GoogleAddress';\n\n\n\n\nconst Sports = () => {\n\n    const userLoggedIn = useSelector(state => state.userReducer)\n\n    const [mapBool, setMapBool] = useState(false);\n\n\n    //handlers.\n\n    const handleMapBool = (e) => {\n        e.preventDefault();\n        Geocode.setApiKey(\"AIzaSyAt-D4AMalUpyQjUe3laQYyjjNgy_hcCOc\");\n        // set response language. Defaults to english.\n        Geocode.setLanguage(\"en\");\n        // set response region. Its optional.\n        // A Geocoding request with region=es (Spain) will return the Spanish city.\n        Geocode.setRegion(\"ca\");\n        // Enable or disable logs. Its optional.\n        Geocode.enableDebug();\n        // Get latidude & longitude from address.\n        Geocode.fromAddress('9165 Clark St Montreal, QC H2N 2K4').then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                console.log(lat, lng);\n                setMapBool(true)\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n\n\n    return (\n        <Wrapper>\n            {userLoggedIn.status !== \"authenticated\" ?\n                <h1>You must be logged in to find games.</h1> :\n\n\n                <div>\n\n                    {/* // */}\n                    <h1>Welcome. Enter an address to begin.</h1>\n                    <GoogleAddress></GoogleAddress>\n                    {/* //call component to find games. */}\n                    {/* <form onSubmit={handleMapBool}>\n                        <input type='text' placeholder='enter address' onChange={(e) => setAddress(e.target.value)}></input>\n                        <button type='submit'>Go</button>\n                    </form> */}\n\n                    {mapBool && <div style={{ width: '100vw', height: '80vh' }}>\n                        <WrappedMap\n                            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`}\n                            loadingElement={<div style={{ height: '100%' }}></div>}\n                            containerElement={<div style={{ height: '100%' }}></div>}\n                            mapElement={<div style={{ height: '100%' }}></div>}\n                        ></WrappedMap>\n                    </div>}\n                </div>\n\n            }\n        </Wrapper>\n\n    )\n\n}\n\nexport default Sports;\n\nconst Wrapper = styled.div`\n\nh1 {\n    text-align: center;\n}\n\n`"]},"metadata":{},"sourceType":"module"}