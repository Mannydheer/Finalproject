{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/GoogleAddress/GoogleAddress.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geoCodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst GoogleAddress = () => {\n  const [address, setAddress] = useState('');\n\n  const handleSelect = async input => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n    value: address,\n    onChange: setAddress,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n    placeholder: \"type address\"\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }\n  }, \"...loading\") : null, suggestions.map(suggestion => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 40\n      }\n    }, \" \", suggestion.description);\n  })))));\n};\n\nexport default GoogleAddress;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/GoogleAddress/GoogleAddress.js"],"names":["React","PlacesAutocomplete","geoCodeByAddress","getLatLng","GoogleAddress","address","setAddress","useState","handleSelect","input","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGO,2BAHP;;AAMA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;;AAGA,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB,CAErC,CAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAEJ,OAA3B;AAAoC,IAAA,QAAQ,EAAEC,UAA9C;AAA0D,IAAA,QAAQ,EAAEE,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK,CAAC;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,sBAA9B;AAAsDC,IAAAA;AAAtD,GAAD,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,+CAAWH,aAAa,CAAC;AAAEI,IAAAA,WAAW,EAAE;AAAf,GAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA2B,IADvC,EAEKF,WAAW,CAACI,GAAZ,CAAiBC,UAAD,IAAgB;AAC7B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOA,UAAU,CAACC,WAAlB,CAAP;AACH,GAFA,CAFL,CAFJ,CAHR,CADJ,CADJ;AAmBH,CA5BD;;AA8BA,eAAeb,aAAf","sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n    geoCodeByAddress,\n    getLatLng\n} from 'react-places-autocomplete';\n\n\nconst GoogleAddress = () => {\n\n    const [address, setAddress] = useState('')\n\n\n    const handleSelect = async (input) => {\n\n    }\n\n    return (\n        <div>\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\n                {/*wants render prop function as child.  */}\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) =>\n                    <div><input {...getInputProps({ placeholder: \"type address\" })}></input>\n\n                        <div>\n                            {loading ? <div>...loading</div> : null}\n                            {suggestions.map((suggestion) => {\n                                return <div> {suggestion.description}</div>\n                            })}\n                        </div>\n                    </div>}\n            </PlacesAutocomplete>\n        </div>\n    )\n\n\n}\n\nexport default GoogleAddress;"]},"metadata":{},"sourceType":"module"}