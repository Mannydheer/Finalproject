{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/App.js/App.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport GlobalStyles from '../GlobalStyles';\nimport Home from '../Home';\nimport Sports from '../Sports';\nimport Host from '../Host';\nimport { fetchUserProfile } from '../helpers/helpers';\nimport { loginSuccess, loginError, loginRequest } from '../actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ViewActivity from '../ViewActivity';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const userLoggedIn = useSelector(state => state.userReducer); //validate if a user token still available in browser.\n  //keep user logged in.\n\n  useEffect(() => {\n    const handleTokenUser = async () => {\n      dispatch(loginRequest());\n\n      try {\n        let response = await fetchUserProfile();\n        let userResponse = await response.json();\n\n        if (response.status === 200) {\n          let name = userResponse.username.split('@')[0];\n          dispatch(loginSuccess({\n            name: name,\n            token: userResponse.accessToken\n          }));\n        } else {\n          dispatch(loginError(userResponse.message));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    handleTokenUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sports, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/hostPark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, userLoggedIn.isAuthenticated ? /*#__PURE__*/React.createElement(Host, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Must be logged in to view this page.\")), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/viewActivity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ViewActivity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/App.js/App.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Switch","Redirect","Navbar","GlobalStyles","Home","Sports","Host","fetchUserProfile","loginSuccess","loginError","loginRequest","useDispatch","useSelector","ViewActivity","App","dispatch","userLoggedIn","state","userReducer","handleTokenUser","response","userResponse","json","status","name","username","split","token","accessToken","message","err","console","log","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from '../Navbar';\nimport GlobalStyles from '../GlobalStyles';\nimport Home from '../Home';\nimport Sports from '../Sports';\nimport Host from '../Host';\nimport { fetchUserProfile } from '../helpers/helpers'\nimport { loginSuccess, loginError, loginRequest } from '../actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ViewActivity from '../ViewActivity';\n\n\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const userLoggedIn = useSelector(state => state.userReducer)\n\n\n\n\n\n  //validate if a user token still available in browser.\n  //keep user logged in.\n  useEffect(() => {\n    const handleTokenUser = async () => {\n      dispatch(loginRequest())\n      try {\n        let response = await fetchUserProfile();\n        let userResponse = await response.json()\n\n        if (response.status === 200) {\n          let name = userResponse.username.split('@')[0]\n          dispatch(loginSuccess({ name: name, token: userResponse.accessToken }))\n        }\n        else {\n          dispatch(loginError(userResponse.message))\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    handleTokenUser()\n  }, [])\n\n\n\n\n  return (\n    <>\n      <GlobalStyles></GlobalStyles>\n\n\n      <Router>\n        <Navbar></Navbar>\n\n        <Switch>\n          <Route exact path='/'>\n            <Home></Home>\n          </Route>\n          <Route exact path='/sports'>\n            <Sports></Sports>\n          </Route>\n          <Route exact path='/hostPark'>\n            {userLoggedIn.isAuthenticated ? <Host></Host> :\n              <div>Must be logged in to view this page.</div>}\n\n          </Route>\n          <Route exact path='/viewActivity'>\n            <ViewActivity></ViewActivity>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}