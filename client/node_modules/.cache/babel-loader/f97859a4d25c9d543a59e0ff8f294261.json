{"ast":null,"code":"const intitialState = {\n  status: 'idle',\n  isLoading: false,\n  hosts: null\n};\nexport default function hostReducer(state = intitialState, action) {\n  switch (action.type) {\n    //singup or login success\n    case \"REQUEST_HOSTS\":\n      {\n        console.log(action);\n        return { ...state,\n          status: 'requesting hosts...',\n          isLoading: true\n        };\n      }\n\n    case \"RETRIEVE_HOSTS\":\n      {\n        console.log(action, 'inside retrieve hosts');\n        let bookings = {};\n        action.data.hosts.forEach((host, index) => {\n          // if (bookings[host.parkId] === host) {\n          //     booking[`${index}`]\n          // }\n          bookings[host.parkId] = host;\n        });\n        return { ...state,\n          status: 'retrieved hosts.',\n          isLoading: false,\n          hosts: bookings\n        };\n      }\n\n    case \"RETRIEVE_HOSTS_ERROR\":\n      {\n        console.log(action);\n        return { ...state,\n          status: 'Error occured retrieving hosts.',\n          isLoading: false,\n          hosts: null\n        };\n      }\n    // case \"SELECTED_PARK\": {\n    //     return {\n    //         ...state,\n    //         selectedPark: action.park\n    //     }\n    // }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/reducers/hosting-reducer.js"],"names":["intitialState","status","isLoading","hosts","hostReducer","state","action","type","console","log","bookings","data","forEach","host","index","parkId"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,MADU;AAElBC,EAAAA,SAAS,EAAE,KAFO;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,aAA7B,EAA4CM,MAA5C,EAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,eAAL;AAAsB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,eAAO,EACH,GAAGD,KADA;AAEHJ,UAAAA,MAAM,EAAE,qBAFL;AAGHC,UAAAA,SAAS,EAAE;AAHR,SAAP;AAKH;;AACD,SAAK,gBAAL;AAAuB;AACnBM,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,uBAApB;AACA,YAAII,QAAQ,GAAG,EAAf;AACAJ,QAAAA,MAAM,CAACK,IAAP,CAAYR,KAAZ,CAAkBS,OAAlB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC;AACA;AACA;AACAJ,UAAAA,QAAQ,CAACG,IAAI,CAACE,MAAN,CAAR,GAAwBF,IAAxB;AACH,SALD;AAOA,eAAO,EACH,GAAGR,KADA;AAEHJ,UAAAA,MAAM,EAAE,kBAFL;AAGHC,UAAAA,SAAS,EAAE,KAHR;AAIHC,UAAAA,KAAK,EAAEO;AAJJ,SAAP;AAMH;;AACD,SAAK,sBAAL;AAA6B;AACzBF,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,eAAO,EACH,GAAGD,KADA;AAEHJ,UAAAA,MAAM,EAAE,iCAFL;AAGHC,UAAAA,SAAS,EAAE,KAHR;AAIHC,UAAAA,KAAK,EAAE;AAJJ,SAAP;AAMH;AACD;AACA;AACA;AACA;AAEA;AACA;;AAGA;AACI,aAAOE,KAAP;AA9CR;AAgDH","sourcesContent":["const intitialState = {\n    status: 'idle',\n    isLoading: false,\n    hosts: null,\n\n};\n\nexport default function hostReducer(state = intitialState, action) {\n    switch (action.type) {\n        //singup or login success\n        case \"REQUEST_HOSTS\": {\n            console.log(action)\n            return {\n                ...state,\n                status: 'requesting hosts...',\n                isLoading: true,\n            }\n        }\n        case \"RETRIEVE_HOSTS\": {\n            console.log(action, 'inside retrieve hosts')\n            let bookings = {}\n            action.data.hosts.forEach((host, index) => {\n                // if (bookings[host.parkId] === host) {\n                //     booking[`${index}`]\n                // }\n                bookings[host.parkId] = host\n            })\n\n            return {\n                ...state,\n                status: 'retrieved hosts.',\n                isLoading: false,\n                hosts: bookings\n            }\n        }\n        case \"RETRIEVE_HOSTS_ERROR\": {\n            console.log(action)\n            return {\n                ...state,\n                status: 'Error occured retrieving hosts.',\n                isLoading: false,\n                hosts: null\n            }\n        }\n        // case \"SELECTED_PARK\": {\n        //     return {\n        //         ...state,\n        //         selectedPark: action.park\n\n        //     }\n        // }\n\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}