{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js\";\nimport React, { useEffect } from 'react'; //scripts to deploy google maps. \n\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\n\nconst Map = ({\n  coordinates\n}) => {\n  //pass down coordinates as props.\n  useEffect(() => {\n    //\n    const handleNearestPlaces = async () => {\n      try {\n        let response = await fetch('/nearbySearch', {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(coordinates)\n        });\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    handleNearestPlaces();\n  }, []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    center: {\n      lat: coordinates.lat,\n      lng: coordinates.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: coordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n}; //must wrap.\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default WrappedMap;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js"],"names":["React","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","Map","coordinates","handleNearestPlaces","response","fetch","method","headers","body","JSON","stringify","console","log","err","lat","lng","WrappedMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,QAA+D,mBAA/D;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC7B;AAIAN,EAAAA,SAAS,CAAC,MAAM;AAEZ;AAEA,UAAMO,mBAAmB,GAAG,YAAY;AAEpC,UAAI;AACA,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkB;AACxCC,UAAAA,MAAM,EAAE,MADgC;AAExCC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX,WAF+B;AAMxCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AANkC,SAAlB,CAA1B;AAQAS,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,OAVD,CAWA,OAAOS,GAAP,EAAY;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AAGJ,KAlBD;;AAoBAV,IAAAA,mBAAmB;AAEtB,GA1BQ,EA0BN,EA1BM,CAAT;AAsCA,sBAEI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,EAAxB;AACI,IAAA,MAAM,EAAE;AAAEW,MAAAA,GAAG,EAAEZ,WAAW,CAACY,GAAnB;AAAwBC,MAAAA,GAAG,EAAEb,WAAW,CAACa;AAAzC,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEb,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AAQH,CAnDD,C,CAoDA;;;AACA,MAAMc,UAAU,GAAGlB,YAAY,CAACC,aAAa,CAACE,GAAD,CAAd,CAA/B;AAGA,eAAee,UAAf","sourcesContent":["import React, { useEffect } from 'react';\n//scripts to deploy google maps. \nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\n\n\nconst Map = ({ coordinates }) => {\n    //pass down coordinates as props.\n\n\n\n    useEffect(() => {\n\n        //\n\n        const handleNearestPlaces = async () => {\n\n            try {\n                let response = await fetch('/nearbySearch', {\n                    method: \"POST\",\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify(coordinates)\n                })\n                console.log(response)\n            }\n            catch (err) {\n                console.log(err)\n            }\n\n\n        }\n\n        handleNearestPlaces();\n\n    }, [])\n\n\n\n\n\n\n\n\n\n\n\n    return (\n\n        <GoogleMap defaultZoom={15}\n            center={{ lat: coordinates.lat, lng: coordinates.lng }}>\n            <Marker position={coordinates}></Marker>\n        </GoogleMap>\n    )\n\n}\n//must wrap.\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\nexport default WrappedMap;"]},"metadata":{},"sourceType":"module"}