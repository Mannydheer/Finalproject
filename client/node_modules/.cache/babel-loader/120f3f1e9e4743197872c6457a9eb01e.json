{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/ViewActivity/ViewActivity.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components'; //components.\n\nimport ParkDetails from '../ParkDetails';\n\nconst ViewActivity = () => {\n  const dispatch = useDispatch(); //stores all nearby parks in store.\n\n  const allParks = useSelector(state => state.parkReducer); //all hosted parks in sotre. \n\n  const hostsInfo = useSelector(state => state.hostReducer); //all events in sotre. \n\n  const allEvents = useSelector(state => state.eventReducer);\n  const userInfo = useSelector(state => state.userReducer);\n  const [parkInfo, setParkInfo] = useState(null);\n  const [hostedEvent, setHostedEvents] = useState(null); //error\n\n  const [error, setError] = useState(false); //on component mount.\n\n  useEffect(() => {\n    //get the selected park. \n    setParkInfo(allParks.selectedPark); //find all hosts that are in this park.\n    //for the parkId, get all hosts who match this id.\n    //see if selectedPark has something inside.\n\n    if (allParks.selectedPark !== null) {\n      let matchedEvents = allEvents.events[allParks.selectedPark.id];\n      console.log(matchedEvents, 'MATCHEDEVENTS');\n      setHostedEvents(matchedEvents);\n    } else {\n      setError(true);\n    }\n  }, []);\n  useEffect(() => {\n    //check if the user logged in is hosting any of his own games.\n    //cannot join his own games.\n    if (hostsInfo.hosts !== null) {\n      let matchedUser = hostsInfo.hosts.find(host => {\n        if (host.userId === userInfo._id) {\n          return host;\n        }\n      });\n    } else {\n      setError(true);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, parkInfo !== null && /*#__PURE__*/React.createElement(ParkDetails, {\n    parkInfo: parkInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 39\n    }\n  }), hostedEvent !== null && hostedEvent.map(event => {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      key: event._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Host: \", event.name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Sport: \", event.sport), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Skill: \", event.skill), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Time: \", event.time), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }\n    }, \"Join\"));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }\n  }, \"Please head over to the sports tab to view park acitivities.\"));\n};\n\nexport default ViewActivity;\nconst Wrapper = styled.div`\n\n`; //NOTES:\n//For now, can only view activities from searching a park as the useEffect that gets\n//all hosts happens in that component(MAP componenet.)","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/ViewActivity/ViewActivity.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styled","ParkDetails","ViewActivity","dispatch","allParks","state","parkReducer","hostsInfo","hostReducer","allEvents","eventReducer","userInfo","userReducer","parkInfo","setParkInfo","hostedEvent","setHostedEvents","error","setError","selectedPark","matchedEvents","events","id","console","log","hosts","matchedUser","find","host","userId","_id","map","event","name","sport","skill","time","textAlign","Wrapper","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\n//components.\nimport ParkDetails from '../ParkDetails'\n\n\n\nconst ViewActivity = () => {\n\n\n\n    const dispatch = useDispatch();\n    //stores all nearby parks in store.\n    const allParks = useSelector(state => state.parkReducer)\n    //all hosted parks in sotre. \n    const hostsInfo = useSelector(state => state.hostReducer)\n    //all events in sotre. \n    const allEvents = useSelector(state => state.eventReducer)\n\n    const userInfo = useSelector(state => state.userReducer)\n\n\n    const [parkInfo, setParkInfo] = useState(null)\n    const [hostedEvent, setHostedEvents] = useState(null)\n    //error\n    const [error, setError] = useState(false)\n\n    //on component mount.\n    useEffect(() => {\n        //get the selected park. \n        setParkInfo(allParks.selectedPark);\n        //find all hosts that are in this park.\n        //for the parkId, get all hosts who match this id.\n        //see if selectedPark has something inside.\n        if (allParks.selectedPark !== null) {\n            let matchedEvents = allEvents.events[allParks.selectedPark.id]\n            console.log(matchedEvents, 'MATCHEDEVENTS')\n            setHostedEvents(matchedEvents)\n        }\n        else {\n            setError(true)\n        }\n    }, [])\n\n    useEffect(() => {\n\n        //check if the user logged in is hosting any of his own games.\n        //cannot join his own games.\n        if (hostsInfo.hosts !== null) {\n            let matchedUser = hostsInfo.hosts.find(host => {\n                if (host.userId === userInfo._id) {\n                    return host;\n                }\n            })\n        }\n        else {\n            setError(true)\n        }\n\n\n\n    }, [])\n\n\n\n\n\n    return (\n        <>\n            {!error ? <div>\n                {parkInfo !== null && <ParkDetails parkInfo={parkInfo} ></ParkDetails>}\n                {/**/}\n                {hostedEvent !== null &&\n                    hostedEvent.map(event => {\n                        return <Wrapper key={event._id}>\n                            <h1>Host: {event.name}</h1>\n                            <h2>Sport: {event.sport}</h2>\n                            <h2>Skill: {event.skill}</h2>\n                            <h2>Time: {event.time}</h2>\n\n\n                            {<button>Join</button>}\n                        </Wrapper>\n                    })\n                }\n            </div> : <div style={{ textAlign: 'center' }}>Please head over to the sports tab to view park acitivities.</div>}\n        </>\n    )\n\n}\n\nexport default ViewActivity;\n\nconst Wrapper = styled.div`\n\n`\n\n\n//NOTES:\n    //For now, can only view activities from searching a park as the useEffect that gets\n    //all hosts happens in that component(MAP componenet.)"]},"metadata":{},"sourceType":"module"}