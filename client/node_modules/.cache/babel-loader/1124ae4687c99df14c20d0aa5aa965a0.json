{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js\";\nimport React, { useEffect, useRef } from 'react'; //scripts to deploy google maps. \n\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\nconst google = window.google;\n\nconst Map = ({\n  coordinates\n}) => {\n  //pass down coordinates as props.\n  const map = React.useRef();\n  useEffect(() => {\n    //\n    let request = {\n      location: map.current,\n      radius: '500',\n      query: 'Park'\n    };\n    var service = new google.maps.places.PlacesService(map.current);\n  }, []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    ref: map,\n    defaultZoom: 15,\n    center: {\n      lat: coordinates.lat,\n      lng: coordinates.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: coordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n}; //must wrap.\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default WrappedMap;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js"],"names":["React","useEffect","useRef","GoogleMap","withScriptjs","withGoogleMap","Marker","google","window","Map","coordinates","map","request","location","current","radius","query","service","maps","places","PlacesService","lat","lng","WrappedMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,QAA+D,mBAA/D;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AAEA,MAAME,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC7B;AAEA,QAAMC,GAAG,GAAGX,KAAK,CAACE,MAAN,EAAZ;AAKAD,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,QAAIW,OAAO,GAAG;AACVC,MAAAA,QAAQ,EAAEF,GAAG,CAACG,OADJ;AAEVC,MAAAA,MAAM,EAAE,KAFE;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAAd;AAMA,QAAIC,OAAO,GAAG,IAAIV,MAAM,CAACW,IAAP,CAAYC,MAAZ,CAAmBC,aAAvB,CAAqCT,GAAG,CAACG,OAAzC,CAAd;AAOH,GAhBQ,EAgBN,EAhBM,CAAT;AA4BA,sBAEI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEH,GAAhB;AAAqB,IAAA,WAAW,EAAE,EAAlC;AACI,IAAA,MAAM,EAAE;AAAEU,MAAAA,GAAG,EAAEX,WAAW,CAACW,GAAnB;AAAwBC,MAAAA,GAAG,EAAEZ,WAAW,CAACY;AAAzC,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEZ,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AAQH,CA5CD,C,CA6CA;;;AACA,MAAMa,UAAU,GAAGnB,YAAY,CAACC,aAAa,CAACI,GAAD,CAAd,CAA/B;AAGA,eAAec,UAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\n//scripts to deploy google maps. \nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\n\nconst google = window.google;\n\nconst Map = ({ coordinates }) => {\n    //pass down coordinates as props.\n\n    const map = React.useRef()\n\n\n\n\n    useEffect(() => {\n\n        //\n        let request = {\n            location: map.current,\n            radius: '500',\n            query: 'Park'\n        };\n\n        var service = new google.maps.places.PlacesService(map.current);\n\n\n\n\n\n\n    }, [])\n\n\n\n\n\n\n\n\n\n\n\n    return (\n\n        <GoogleMap ref={map} defaultZoom={15}\n            center={{ lat: coordinates.lat, lng: coordinates.lng }}>\n            <Marker position={coordinates}></Marker>\n        </GoogleMap>\n    )\n\n}\n//must wrap.\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\nexport default WrappedMap;"]},"metadata":{},"sourceType":"module"}