{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Host/Host.js\";\nimport React, { useState } from 'react';\nimport { PageWrapper } from '../Constants/Constants';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPark, requestHosts, retrieveHosts, retrieveHostsError } from '../actions/parkActions'; //DATA\n\nconst sports = [\"Choose sport\", \"Soccer\", \"Tennis\", \"Basket-Ball\", \"Badminton\", \"Hockey\", \"Dodgeball\", \"Volleyball\"];\nconst skillLevel = [\"Choose skill level\", \"Beginner\", \"Intermediate\", \"Advanced\"];\nconst times = [\"Choose Time\", \"Anytime\", \"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\n\nconst Host = () => {\n  const userLoggedIn = useSelector(state => state.userReducer); //use this for real.\n\n  const selectedPark = useSelector(state => state.parkReducer.selectedPark); //\n\n  const [sportSelect, setSportSelect] = useState(\"Choose sport\");\n  const [skillSelect, setSkillSelect] = useState(\"Choose skill level\");\n  const [time, setTime] = useState(\"Choose Time\");\n  const [fieldError, setFieldError] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleHostInformation = async event => {\n    event.preventDefault();\n    setFieldError(false);\n\n    if (sportSelect !== \"Choose sport\" && skillSelect !== \"Choose skill level\" && time !== \"Choose Time\" && selectedPark !== null) {\n      let hostingInformation = {\n        name: userLoggedIn.user,\n        sport: sportSelect,\n        skill: skillSelect,\n        time: time,\n        //replace witht he actual park. \n        parkId: selectedPark.id,\n        Registration: new Date(),\n        isBooked: true\n      }; //if token is undefined. will be handled in the back?\n\n      let token = localStorage.getItem('accesstoken'); //\n\n      try {\n        let response = await fetch(\"/hostingInformation\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'Authorization': `${token}`\n          },\n          body: JSON.stringify(hostingInformation)\n        }); //ADD DISPATCHED?\n\n        if (response.status === 200) {\n          let hostReponse = await response.json();\n        }\n      } catch (err) {\n        console.log(err, \"catch error inside handleHosting in Host component.\");\n      }\n    } else {\n      setFieldError(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleHostInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    required: true,\n    onChange: event => setSportSelect(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, sports.map(sport => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, sport);\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    required: true,\n    onChange: event => setSkillSelect(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, skillLevel.map(skill => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, skill);\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    required: true,\n    onChange: event => setTime(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, times.map(time => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, time);\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Submit\"), fieldError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 32\n    }\n  }, \"Please select all fields.\")));\n};\n\nexport default Host; // const parkInfo =\n// {\n//     business_status: 'OPERATIONAL',\n//     formatted_address: 'Rue Fleury O, Montr√©al, QC H3L 1B9, Canada',\n//     geometry: {\n//         location: {\n//             lat: 45.5440696,\n//             lng: -73.6655919\n//         },\n//         viewport: {\n//             northeast: {\n//                 lat: 45.54563832989272,\n//                 lng: -73.66410922010726\n//             },\n//             southwest: {\n//                 lat: 45.54293867010728,\n//                 lng: -73.66680887989271\n//             }\n//         }\n//     },\n//     icon: 'https://maps.gstatic.com/mapfiles/place_api/icons/generic_recreational-71.png',\n//     id: '0954f1fa71a785bbbdc1fce14df48647a9ea5d57',\n//     name: 'Parc Tolhurst',\n//     opening_hours: {\n//         open_now: true\n//     },\n//     photos: [\n//         {\n//             height: 3456,\n//             html_attributions: [\n//                 '<a href=\"https://maps.google.com/maps/contrib/101021804328762220817\">paul rossini</a>'\n//             ],\n//             photo_reference: 'CmRaAAAAdbfA3pze3_YBS_dpMcBOEopwoHWrSodO-2-fP9-FYJ7KCBcpKhgu7U3T90mz_8W6rFxrFKy0VI9N31LcxlAuN4UakpvJ4pAunHcd_24hpWwlRt2NAqQxfyYRIBpr7w8HEhAi9cdyOZB7i89zi3sfC6BmGhTDUSvzr4pYleLWaKaLxXi8SHz_oA',\n//             width: 4608\n//         }\n//     ],\n//     place_id: 'ChIJwUGDhpMYyUwRMCTSeBh8Z8E',\n//     plus_code: {\n//         compound_code: 'G8VM+JQ Montreal, Quebec',\n//         global_code: '87Q8G8VM+JQ'\n//     },\n//     rating: 4.3,\n//     reference: 'ChIJwUGDhpMYyUwRMCTSeBh8Z8E',\n//     types: [\n//         'park',\n//         'point_of_interest',\n//         'establishment'\n//     ],\n//     user_ratings_total: 143\n// }","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Host/Host.js"],"names":["React","useState","PageWrapper","styled","useDispatch","useSelector","selectPark","requestHosts","retrieveHosts","retrieveHostsError","sports","skillLevel","times","Host","userLoggedIn","state","userReducer","selectedPark","parkReducer","sportSelect","setSportSelect","skillSelect","setSkillSelect","time","setTime","fieldError","setFieldError","dispatch","handleHostInformation","event","preventDefault","hostingInformation","name","user","sport","skill","parkId","id","Registration","Date","isBooked","token","localStorage","getItem","response","fetch","method","headers","Accept","body","JSON","stringify","status","hostReponse","json","err","console","log","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { PageWrapper } from '../Constants/Constants'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPark, requestHosts, retrieveHosts, retrieveHostsError } from '../actions/parkActions';\n\n\n//DATA\nconst sports = [\n    \"Choose sport\",\n    \"Soccer\",\n    \"Tennis\",\n    \"Basket-Ball\",\n    \"Badminton\",\n    \"Hockey\",\n    \"Dodgeball\",\n    \"Volleyball\",\n];\n\nconst skillLevel = [\n    \"Choose skill level\",\n    \"Beginner\",\n    \"Intermediate\",\n    \"Advanced\"\n\n];\nconst times = [\n    \"Choose Time\",\n    \"Anytime\",\n    \"Morning\",\n    \"Afternoon\",\n    \"Evening\",\n    \"Night\"\n];\n\n\n\n\nconst Host = () => {\n\n    const userLoggedIn = useSelector(state => state.userReducer);\n    //use this for real.\n    const selectedPark = useSelector(state => state.parkReducer.selectedPark);\n\n    //\n    const [sportSelect, setSportSelect] = useState(\"Choose sport\");\n    const [skillSelect, setSkillSelect] = useState(\"Choose skill level\");\n    const [time, setTime] = useState(\"Choose Time\");\n    const [fieldError, setFieldError] = useState(false);\n\n    const dispatch = useDispatch();\n\n\n\n    const handleHostInformation = async (event) => {\n        event.preventDefault();\n\n        setFieldError(false)\n\n        if (sportSelect !== \"Choose sport\" &&\n            skillSelect !== \"Choose skill level\" &&\n            time !== \"Choose Time\" && selectedPark !== null) {\n\n            let hostingInformation = {\n                name: userLoggedIn.user,\n                sport: sportSelect,\n                skill: skillSelect,\n                time: time,\n                //replace witht he actual park. \n                parkId: selectedPark.id,\n                Registration: new Date(),\n                isBooked: true,\n            }\n            //if token is undefined. will be handled in the back?\n            let token = localStorage.getItem('accesstoken')\n            //\n            try {\n                let response = await fetch(\"/hostingInformation\", {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json',\n                        'Authorization': `${token}`\n                    },\n                    body: JSON.stringify(hostingInformation)\n\n                })\n                //ADD DISPATCHED?\n                if (response.status === 200) {\n                    let hostReponse = await response.json()\n                }\n\n            }\n            catch (err) {\n                console.log(err, \"catch error inside handleHosting in Host component.\")\n            }\n\n        }\n        else {\n            setFieldError(true)\n        }\n    }\n\n\n\n\n\n\n    return (\n\n        <PageWrapper>\n\n            <form onSubmit={handleHostInformation}>\n                <select required onChange={(event) => setSportSelect(event.target.value)}>\n                    {sports.map(sport => {\n                        return (\n                            <option>{sport}</option>\n                        )\n                    })}\n                </select>\n                <select required onChange={(event) => setSkillSelect(event.target.value)}>\n                    {skillLevel.map(skill => {\n                        return (\n                            <option>{skill}</option>\n                        )\n                    })}\n                </select>\n                <select required onChange={(event) => setTime(event.target.value)}>\n                    {times.map(time => {\n                        return (\n                            <option>{time}</option>\n                        )\n                    })}\n                </select>\n                {/* <input type='text'></input>\n                <input type='text'></input> */}\n                <button type='submit'>Submit</button>\n                {fieldError && <div>Please select all fields.</div>}\n            </form>\n        </PageWrapper>\n    )\n\n}\n\nexport default Host;\n\n\n// const parkInfo =\n// {\n//     business_status: 'OPERATIONAL',\n//     formatted_address: 'Rue Fleury O, Montr√©al, QC H3L 1B9, Canada',\n//     geometry: {\n//         location: {\n//             lat: 45.5440696,\n//             lng: -73.6655919\n//         },\n//         viewport: {\n//             northeast: {\n//                 lat: 45.54563832989272,\n//                 lng: -73.66410922010726\n//             },\n//             southwest: {\n//                 lat: 45.54293867010728,\n//                 lng: -73.66680887989271\n//             }\n//         }\n//     },\n//     icon: 'https://maps.gstatic.com/mapfiles/place_api/icons/generic_recreational-71.png',\n//     id: '0954f1fa71a785bbbdc1fce14df48647a9ea5d57',\n//     name: 'Parc Tolhurst',\n//     opening_hours: {\n//         open_now: true\n//     },\n//     photos: [\n//         {\n//             height: 3456,\n//             html_attributions: [\n//                 '<a href=\"https://maps.google.com/maps/contrib/101021804328762220817\">paul rossini</a>'\n//             ],\n//             photo_reference: 'CmRaAAAAdbfA3pze3_YBS_dpMcBOEopwoHWrSodO-2-fP9-FYJ7KCBcpKhgu7U3T90mz_8W6rFxrFKy0VI9N31LcxlAuN4UakpvJ4pAunHcd_24hpWwlRt2NAqQxfyYRIBpr7w8HEhAi9cdyOZB7i89zi3sfC6BmGhTDUSvzr4pYleLWaKaLxXi8SHz_oA',\n//             width: 4608\n//         }\n//     ],\n//     place_id: 'ChIJwUGDhpMYyUwRMCTSeBh8Z8E',\n//     plus_code: {\n//         compound_code: 'G8VM+JQ Montreal, Quebec',\n//         global_code: '87Q8G8VM+JQ'\n//     },\n//     rating: 4.3,\n//     reference: 'ChIJwUGDhpMYyUwRMCTSeBh8Z8E',\n//     types: [\n//         'park',\n//         'point_of_interest',\n//         'establishment'\n//     ],\n//     user_ratings_total: 143\n// }\n"]},"metadata":{},"sourceType":"module"}