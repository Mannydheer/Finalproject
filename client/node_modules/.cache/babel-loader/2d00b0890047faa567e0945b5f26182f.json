{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/ParkSidebar/ParkSidebar.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { GiCancel } from 'react-icons/fa';\n\nconst ParkSidebar = ({\n  parkInfo,\n  parkMenu,\n  setParkMenu\n}) => {\n  console.log(parkInfo);\n  const [image, setImage] = useState(null); //-----------------------SELECTED PARK PHOTO ------------------------------\n\n  useEffect(() => {\n    const handlePhoto = async () => {\n      if (parkInfo.photos === undefined) {\n        //put something that does exist. \n        console.log('photo does not exist');\n      } else {\n        let photo = parkInfo.photos[0].photo_reference;\n        console.log(photo, 'inside handle photo');\n\n        try {\n          let response = await fetch('/parkPhoto', {\n            method: \"POST\",\n            headers: {\n              'Accept': 'application/json',\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              photo\n            })\n          });\n\n          if (response.status === 200) {\n            let image = await response.json();\n            setImage(image.image);\n          } else {\n            console.log('error occured fetching park image.');\n          }\n        } catch (err) {\n          console.log(\"error occured in Catch for handlePhoto\", err);\n        }\n      }\n    };\n\n    handlePhoto();\n  }, [parkInfo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, parkInfo !== null && /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, parkInfo.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: parkInfo.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, parkInfo.formatted_address), image !== null && /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Ratings: \", parkInfo.user_ratings_total), parkMenu && /*#__PURE__*/React.createElement(Btn, {\n    onClick: () => setParkMenu(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"X\")));\n};\n\nexport default ParkSidebar;\nconst Btn = styled.button`\nposition: absolute;\ntop: 0;\nleft: 400px;\nz-index: 101;\ntransition-duration: 5s;\n\n`;\nconst Wrapper = styled.div`\n\nword-wrap: break-word;\npadding-right: 4rem;\n    padding-bottom: 20px; \n    margin: 2rem 0;\n    width: 400px;\n    text-align: center;\n    font-size: 1rem;\n    \n    h2 {\n        font-size: 1.1rem;\n        padding: 1rem;\n    }\n`;\nconst Title = styled.div`\nmargin-top: 2.5rem;\ndisplay: flex;\njustify-content: center;\nposition: relative;\n\nimg {\n    position: absolute;\n    bottom: 50px;\n}\n\n\n`;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/ParkSidebar/ParkSidebar.js"],"names":["React","useState","useEffect","styled","GiCancel","ParkSidebar","parkInfo","parkMenu","setParkMenu","console","log","image","setImage","handlePhoto","photos","undefined","photo","photo_reference","response","fetch","method","headers","body","JSON","stringify","status","json","err","name","icon","formatted_address","user_ratings_total","Btn","button","Wrapper","div","Title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { GiCancel } from 'react-icons/fa';\n\n\n\n\nconst ParkSidebar = ({ parkInfo, parkMenu, setParkMenu }) => {\n\n    console.log(parkInfo)\n\n    const [image, setImage] = useState(null)\n\n\n    //-----------------------SELECTED PARK PHOTO ------------------------------\n    useEffect(() => {\n        const handlePhoto = async () => {\n            if (parkInfo.photos === undefined) {\n                //put something that does exist. \n                console.log('photo does not exist')\n            }\n            else {\n\n                let photo = parkInfo.photos[0].photo_reference;\n                console.log(photo, 'inside handle photo')\n                try {\n                    let response = await fetch('/parkPhoto', {\n                        method: \"POST\",\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-type': 'application/json'\n                        },\n                        body: JSON.stringify({ photo })\n                    })\n                    if (response.status === 200) {\n                        let image = await response.json();\n                        setImage(image.image)\n                    }\n                    else {\n                        console.log('error occured fetching park image.')\n                    }\n                }\n                catch (err) {\n                    console.log(\"error occured in Catch for handlePhoto\", err)\n                }\n            }\n\n\n        }\n        handlePhoto();\n    }, [parkInfo])\n\n\n\n    return (\n        <>\n\n            {parkInfo !== null &&\n                <Wrapper>\n\n                    <Title>\n                        <h1>{parkInfo.name}</h1>\n                        <img src={parkInfo.icon}></img>\n                    </Title>\n\n                    <h2>{parkInfo.formatted_address}</h2>\n                    {image !== null && <img src={image}></img>}\n                    <div>Ratings: {parkInfo.user_ratings_total}</div>\n                    {parkMenu &&\n                        <Btn onClick={() => setParkMenu(false)}>X</Btn>}\n                </Wrapper>}\n\n\n\n\n\n        </>\n\n    )\n\n}\n\n\nexport default ParkSidebar;\n\nconst Btn = styled.button`\nposition: absolute;\ntop: 0;\nleft: 400px;\nz-index: 101;\ntransition-duration: 5s;\n\n`\n\nconst Wrapper = styled.div`\n\nword-wrap: break-word;\npadding-right: 4rem;\n    padding-bottom: 20px; \n    margin: 2rem 0;\n    width: 400px;\n    text-align: center;\n    font-size: 1rem;\n    \n    h2 {\n        font-size: 1.1rem;\n        padding: 1rem;\n    }\n`\n\nconst Title = styled.div`\nmargin-top: 2.5rem;\ndisplay: flex;\njustify-content: center;\nposition: relative;\n\nimg {\n    position: absolute;\n    bottom: 50px;\n}\n\n\n`\n"]},"metadata":{},"sourceType":"module"}