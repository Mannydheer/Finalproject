{"ast":null,"code":"var _jsxFileName = \"/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js\";\nimport React, { useEffect } from 'react'; //scripts to deploy google maps. \n\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\n\nconst Map = ({\n  coordinates\n}) => {\n  //pass down coordinates as props.\n  useEffect(() => {\n    //\n    const service = new google.maps.places.PlacesService(map);\n    let x = service.nearbySearch({\n      location: coordinates,\n      radius: 100,\n      type: ['parks']\n    });\n    console.log(x, 'inside map');\n  }, []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    center: {\n      lat: coordinates.lat,\n      lng: coordinates.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: coordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n}; //must wrap.\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default WrappedMap;","map":{"version":3,"sources":["/Users/maniderdheer/Documents/GitHub/finalproject/client/src/components/Map/Map.js"],"names":["React","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","Map","coordinates","service","google","maps","places","PlacesService","map","x","nearbySearch","location","radius","type","console","log","lat","lng","WrappedMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,QAA+D,mBAA/D;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC7B;AAIAN,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA,UAAMO,OAAO,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,aAAvB,CAAqCC,GAArC,CAAhB;AAEA,QAAIC,CAAC,GAAGN,OAAO,CAACO,YAAR,CAAqB;AACzBC,MAAAA,QAAQ,EAAET,WADe;AAEzBU,MAAAA,MAAM,EAAE,GAFiB;AAGzBC,MAAAA,IAAI,EAAE,CAAC,OAAD;AAHmB,KAArB,CAAR;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ,EAAe,YAAf;AAIH,GAfQ,EAeN,EAfM,CAAT;AA2BA,sBAEI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,EAAxB;AACI,IAAA,MAAM,EAAE;AAAEO,MAAAA,GAAG,EAAEd,WAAW,CAACc,GAAnB;AAAwBC,MAAAA,GAAG,EAAEf,WAAW,CAACe;AAAzC,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEf,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AAQH,CAxCD,C,CAyCA;;;AACA,MAAMgB,UAAU,GAAGpB,YAAY,CAACC,aAAa,CAACE,GAAD,CAAd,CAA/B;AAGA,eAAeiB,UAAf","sourcesContent":["import React, { useEffect } from 'react';\n//scripts to deploy google maps. \nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\n\n\nconst Map = ({ coordinates }) => {\n    //pass down coordinates as props.\n\n\n\n    useEffect(() => {\n\n        //\n        const service = new google.maps.places.PlacesService(map);\n\n        let x = service.nearbySearch({\n            location: coordinates,\n            radius: 100,\n            type: ['parks']\n        });\n\n        console.log(x, 'inside map')\n\n\n\n    }, [])\n\n\n\n\n\n\n\n\n\n\n\n    return (\n\n        <GoogleMap defaultZoom={15}\n            center={{ lat: coordinates.lat, lng: coordinates.lng }}>\n            <Marker position={coordinates}></Marker>\n        </GoogleMap>\n    )\n\n}\n//must wrap.\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\nexport default WrappedMap;"]},"metadata":{},"sourceType":"module"}